---
# tasks file for ansible-macdock

- name: "[macdock] Get info about items to be removed"
  command: "/usr/local/bin/dockutil --find '{{ item }}'"
  register: macdock_items_remove
  with_items: "{{ macdock_remove_items }}"
  changed_when: false
  failed_when: false
  check_mode: no
  when: not macdock_items_remove_all|bool
  tags: macdock

- name: "[macdock] Remove all dock items"
  command: "/usr/local/bin/dockutil --remove all --no-restart"
  register: macdock_removed_items_task
  when: macdock_items_remove_all|bool
  tags: macdock

- name: "[macdock] Remove all unwanted dock items"
  command: "/usr/local/bin/dockutil --remove '{{ item.item }}' --no-restart"
  with_items: "{{ macdock_items_remove.results }}"
  loop_control:
    label: "{{ item.item }}"
  when:
  - not macdock_items_remove_all|bool
  - (item.item ~ " was found in persistent-apps") in item.stdout
  notify: Restart Dock
  tags: macdock

- name: "[macdock] Get information on configured setup"
  command: "/usr/local/bin/dockutil --find '{{ item.name }}'"
  register: macdock_dockutil
  with_items: "{{ macdock_add_items }}"
  changed_when: false
  failed_when: false
  check_mode: no
  tags: macdock

- name: "[macdock] Add items to dock"
  command: "/usr/local/bin/dockutil \
          --add '{{ item.item.path }}' \
          --position {{ item.item.pos }} \
          --section {{ item.item.section | default('apps') }} \
          --no-restart"
  with_items: "{{ macdock_dockutil.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: (item.item.name ~ " was not found in") in item.stdout
  notify: Restart Dock
  tags: macdock

- name: "[macdock] Get information on current setup"
  command: "/usr/local/bin/dockutil --find '{{ item.name }}'"
  register: macdock_dockutil_current
  with_items: "{{ macdock_add_items }}"
  changed_when: false
  failed_when: false
  check_mode: no
  tags: macdock

- name: "[macdock] Moving items"
  command: "/usr/local/bin/dockutil --move '{{ item.item.name }}' --position {{ item.item.pos }} --no-restart"
  with_items: "{{ macdock_dockutil_current.results }}"
  loop_control:
    label: "{{ item.item }}"
  when:
  - (item.item.name ~ " was found in persistent-apps at slot " ~ item.item.pos ~ " in") not in item.stdout
  - (item.item.name ~ " was not found") not in item.stdout
  notify: Restart Dock
  tags: macdock

# DEFAULTS
# defaults write com.apple.dock magnification -bool true
- name: "[macdock] System Preferences > Dock > Magnification: {{ macdock_magnify }}"
  osx_defaults:
    domain: com.apple.dock
    key: magnification
    type: bool
    value: "{{ macdock_magnify }}"
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock mineffect -string "scale"
- name: "[macdock] System Preferences > Dock > Minimize windows using: Scale effect"
  osx_defaults:
    domain: com.apple.dock
    key: mineffect
    type: string
    value: 'scale'
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock minimize-to-application -bool true
- name: "[macdock] System Preferences > Dock > Minimize windows into application icon"
  osx_defaults:
    domain: com.apple.dock
    key: minimize-to-application
    type: bool
    value: true
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock autohide -bool false
- name: "[macdock] System Preferences > Dock > Automatically hide and show the Dock: {{ macdock_hide }}"
  osx_defaults:
    domain: com.apple.dock
    key: autohide
    type: bool
    value: "{{ macdock_hide }}"
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock autohide-time-modifier -float 0.5
- name: "[macdock] System Preferences > Dock > Automatically hide and show the Dock (duration - 0.5)"
  osx_defaults:
    domain: com.apple.dock
    key: autohide-time-modifier
    type: float
    value: 0.5
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock autohide-delay -float 0
- name: "[macdock] System Preferences > Dock > Automatically hide and show the Dock (delay - 0)"
  osx_defaults:
    domain: com.apple.dock
    key: autohide-delay
    type: float
    value: 0
    state: present
  notify: Restart Dock
  tags: macdock

# defaults write com.apple.dock show-process-indicators -bool true
- name: "[macdock] System Preferences > Dock > Show indicators for open applications"
  osx_defaults:
    domain: com.apple.dock
    key: show-process-indicators
    type: bool
    value: true
    state: present
  notify: Restart Dock
  tags: macdock
...
